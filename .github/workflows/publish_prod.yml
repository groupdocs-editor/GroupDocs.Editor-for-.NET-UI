# This workflow will build a .NET project
# For more information see: https:\\docs.github.com\en\actions\automating-builds-and-tests\building-and-testing-net

name: PROD Publish GroupDocs.Editor.UI.Api

on:
  workflow_dispatch:

jobs:
  publish_stage:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        source-url: https://api.nuget.org/v3/index.json
      env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build solution and generate NuGet package
      run: |
          cd src\GroupDocs.Editor.UI.Api
          dotnet pack -c Release -o out
    - name: Write cert
      env:
        PFX_IN_BASE64: ${{ secrets.PFX_IN_BASE64 }}
        PFX_PATH: ${{ secrets.PFX_PATH }}
      run: |
          [System.IO.File]::WriteAllBytes($env:PFX_PATH, [System.Convert]::FromBase64String($env:PFX_IN_BASE64))
    - name: Sign by cert
      run: dotnet nuget sign .\src\GroupDocs.Editor.UI.Api\out\*.nupkg --certificate-path ${{secrets.PFX_PATH}} --certificate-password ${{secrets.PFX_PWD}} --timestamper ${{secrets.PFX_TMS}}
    - name: Nuget verify
      run: dotnet nuget verify .\src\GroupDocs.Editor.UI.Api\out\*.nupkg --all
    - name: Remove cert
      run: rm ${{secrets.PFX_PATH}}
    - name: Push generated package to GitHub registry
      run: dotnet nuget push .\src\GroupDocs.Editor.UI.Api\out\*.nupkg --api-key "${{secrets.NUGET_TOKEN}}" --source https://api.nuget.org/v3/index.json --skip-duplicate
